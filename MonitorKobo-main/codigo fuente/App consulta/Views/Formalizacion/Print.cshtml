@model IEnumerable<App_consulta.Models.Formalization>

@{
    ViewData["Title"] = "Imprimir formalizaciones";
    ViewData["Subtitle"] = "";
    Layout = "~/Views/Shared/_LayoutPrint.cshtml";

    if (Model.Count() == 1)
    {
        ViewData["Title"] = "Formalizacion_" + Model.First().NumeroRegistro;
    }
    else if (Model.Count() > 1)
    {
        ViewData["Title"] = "Fichas formalizaciones";
    }

    var disabled = Model.Count() > 0 ? "" : "disabled";

    var estadosValidos = ViewBag.EstadosValidos;
}

<div class="row my-4 d-print-none ">
    <div class="col-10 mx-auto">
        <div class="card  border-dark ">
            <div class="card-body">
                <h4 class="my-2">Imprimir formalizaciones</h4>
                <hr />
                <div class="row mb-4">
                    <div class=" col-4 offset-4">
                        <button onclick="window.print();" @disabled class="btn btn-lg btn-block btn-success"><i class="fas fa-print"></i> IMPRIMIR </button>
                    </div>
                </div>


                @foreach (var formalz in Model)
                {
                    <div class="d-print-none">
                        <table class="table table-bordered table-formalz  table-sm">
                            <tbody class="@(!estadosValidos.Contains(formalz.Estado) ? "text-danger" : "")">
                                @switch (formalz.Estado)
                                {
                                    case Formalization.ESTADO_CANCELADO:
                                    case Formalization.ESTADO_CARNET_VIGENTE:
                                        <tr class="text-danger text-center"><td colspan="5"><b>Formalización cancelada</b>, no puede ser impresa</td></tr>
                                        break;
                                    case Formalization.ESTADO_BORRADOR:
                                        <tr class="text-danger text-center"><td colspan="5"><b>Formalización en borrador</b>, no puede ser impresa</td></tr>
                                        break;
                                }
                                <tr>
                                    <td rowspan="4" class="text-center">
                                        @await Component.InvokeAsync("Image", new { file = formalz.ImgPescador, text = "Foto pescador", css = "img-mini" })
                                    </td>
                                </tr>
                                <tr>
                                    <td colspan="2" class="font-weight-bold text-uppercase">@formalz.Name</td>
                                    <td class="font-weight-light">Estado</td>
                                    <td class="text-center">
                                        @switch (formalz.Estado)
                                        {
                                            case Formalization.ESTADO_BORRADOR:
                                                <span class="badge bg-warning text-dark">Borrador</span>
                                                break;
                                            case Formalization.ESTADO_COMPLETO:
                                                <span class="badge bg-success text-white">Completo</span>
                                                break;
                                            case Formalization.ESTADO_CANCELADO:
                                                <span class="badge bg-danger text-white">Cancelado</span>
                                                break;
                                            case Formalization.ESTADO_IMPRESO:
                                                <span class="badge bg-info text-white">Impreso</span>
                                                break;
                                            case Formalization.ESTADO_CARNET_VIGENTE:
                                                <span class="badge bg-danger text-white float-right">Carnet vigente</span>
                                                break;
                                        }
                                    </td>
                                </tr>
                                <tr>
                                    <td class="font-weight-light">Fecha de solicitud</td>
                                    <td>@formalz.FechaSolicitud</td>
                                    <td class="font-weight-light">No. de registro</td>
                                    <td>@formalz.NumeroRegistro</td>
                                </tr>

                                <tr>
                                    <td class="font-weight-light">No. de Cedula</td>
                                    <td>@formalz.Cedula</td>
                                    <td class="font-weight-light">Municipio</td>
                                    <td>@formalz.Municipio - @formalz.Departamento</td>
                                </tr>


                            </tbody>
                        </table>

                    </div>
                }
            </div>
        </div>
    </div>
</div>

@foreach (var formalz in Model)
{
    if (!estadosValidos.Contains(formalz.Estado))
    {
        continue;
    }
    <div class="page-f d-none d-print-block">
        @await Html.PartialAsync("_FormalizacionPartial")
        <p class="font-weight-bold text-center">INFORMACIÓN GENERAL</p>
        <p class="text-justify">
            <strong><i class="far fa-check-circle"></i> F1. - Formato solicitud de carnetización:</strong>
            Documento Original
        </p>

        <table class="table table-bordered table-formalz  table-sm">
            <tbody>
                <tr>
                    <td class="font-weight-bold">Fecha de solicitud</td>
                    <td>@formalz.FechaSolicitud</td>
                    <td class="font-weight-bold">No. de registro</td>
                    <td>@formalz.NumeroRegistro</td>
                </tr>
                <tr>
                    <td class="font-weight-bold">Nombre y apellidos</td>
                    <td colspan="3" class="text-uppercase">@formalz.Name</td>
                </tr>
                <tr>
                    <td class="font-weight-bold">No. de Cedula</td>
                    <td>@formalz.Cedula</td>
                    <td class="font-weight-bold">Municipio</td>
                    <td>@formalz.Municipio - @formalz.Departamento</td>
                </tr>
                <tr>
                    <td class="font-weight-bold"> Nombre del formato</td>
                    <td colspan="3">F1. - Formato Solicitud de Carnetización: Documento Original</td>
                </tr>
                <tr>
                    <td colspan="4" class="text-center">
                        @await Component.InvokeAsync("Image", new { file = formalz.ImgSolicitudCarnet, text = "Image Documento Original", css = "img-large" })
                    </td>
                </tr>
            </tbody>
        </table>

    </div>
    <div class="page-f d-none d-print-block">
        @await Html.PartialAsync("_FormalizacionPartial")
        <p class="text-justify">
            <strong><i class="far fa-check-circle"></i> F2. y F3. - Fotografía</strong> tamaño documento fondo blanco y Fotografía de la Cedula de Ciudadanía del
            pescador solicitante.
        </p>

        <table class="table table-bordered table-formalz  table-sm">
            <tbody>
                <tr>
                    <td class="font-weight-bold">Fecha de solicitud</td>
                    <td>@formalz.FechaSolicitud</td>
                    <td class="font-weight-bold">No. de registro</td>
                    <td>@formalz.NumeroRegistro</td>
                </tr>
                <tr>
                    <td class="font-weight-bold">Nombre y apellidos</td>
                    <td colspan="3" class="text-uppercase">@formalz.Name</td>
                </tr>
                <tr>
                    <td class="font-weight-bold">No. de Cedula</td>
                    <td>@formalz.Cedula</td>
                    <td class="font-weight-bold">Municipio</td>
                    <td>@formalz.Municipio - @formalz.Departamento</td>
                </tr>
                <tr>
                    <td class="font-weight-bold"> Área de pesca</td>
                    <td colspan="3">@formalz.AreaPesca</td>
                </tr>
                <tr>
                    <td class="font-weight-bold"> Artes de pesca</td>
                    <td colspan="3">@formalz.ArtesPesca</td>
                </tr>
                <tr>
                    <td class="font-weight-bold"> Nombre del formato</td>
                    <td colspan="3">
                        F2. y F3. - Fotografía tamaño documento fondo blanco y Fotografía de la Cedula
                        de Ciudadanía del pescador solicitante.
                    </td>
                </tr>
                <tr>
                    <td class="font-weight-bold" colspan="2">Fotografía Pescador Artesanal</td>
                    <td class="font-weight-bold" colspan="2">Cédula del pescador (Anverso)</td>
                </tr>
                <tr>
                    <td colspan="2" rowspan="3" class="text-center">
                        @await Component.InvokeAsync("Image", new { file = formalz.ImgPescador, text = "Fotografía Pescador Artesanal", css = "img-small" })
                    </td>
                    <td colspan="2" class="text-center">
                        @await Component.InvokeAsync("Image", new { file = formalz.ImgCedulaAnverso, text = "Cédula del pescador (Anverso)", css = "img-small" })
                    </td>
                </tr>
                <tr>
                    <td class="font-weight-bold" colspan="2">Cédula del pescador (Reverso)</td>
                </tr>
                <tr>
                    <td colspan="2" class="text-center">
                        @await Component.InvokeAsync("Image", new { file = formalz.ImgCedulaReverso, text = "Cédula del pescador (Reverso)", css = "img-small" })
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class="page-f d-none d-print-block">
        @await Html.PartialAsync("_FormalizacionPartial")
        <p class="text-justify">
            <strong><i class="far fa-check-circle"></i> F4. - Formato Certificación de acreditación de pescado artesanal:</strong>
            del representante legal de la asociación, federación o confederación, concejo o resguardo indígena en la cual certifique que el
            solicitante es pescador, hace parte de la correspondiente organización. En caso de no existir asociación,
            federación o confederación, podrá anexar certificación de la Umata, secretaría de agricultura y pesca o
            de desarrollo de la jurisdicción o del presidente de la acción comunal del lugar.
        </p>
        <table class="table table-bordered table-formalz  table-sm">
            <tbody>
                <tr>
                    <td class="font-weight-bold">Fecha de solicitud</td>
                    <td>@formalz.FechaSolicitud</td>
                    <td class="font-weight-bold">No. de registro</td>
                    <td>@formalz.NumeroRegistro</td>
                </tr>
                <tr>
                    <td class="font-weight-bold">Nombre y apellidos</td>
                    <td colspan="3" class="text-uppercase">@formalz.Name</td>
                </tr>
                <tr>
                    <td class="font-weight-bold">No. de Cedula</td>
                    <td>@formalz.Cedula</td>
                    <td class="font-weight-bold">Municipio</td>
                    <td>@formalz.Municipio - @formalz.Departamento</td>
                </tr>
                <tr>
                    <td class="font-weight-bold"> Nombre del formato</td>
                    <td colspan="3">
                        F4. - Formato Certificación de acreditación de pescado artesanal:
                        Documento original
                    </td>
                </tr>
                <tr>
                    <td colspan="4" class="text-center">
                        @await Component.InvokeAsync("Image", new { file = formalz.ImgCertificacion, text = "Image Documento Original", css = "img-large" })
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

}

@section Styles {
    <link rel="stylesheet" href="~/css/site-f.css" />
}
@section Scripts{
    <script>
        var myIdsPrint = @Html.Raw(ViewBag.Ids);
    </script>
    <script type="text/javascript" src="~/js/tables/PrintFormalizacionScript.js?v=1.0"></script>
}