@using App_consulta.Helper;
@model App_consulta.Models.KoGenericData
@{
    ViewData["Title"] = "Imprimir";
    Layout = "~/Views/Shared/_LayoutClean.cshtml";

    Dictionary<string, AquacultureField> fields = ViewBag.Fields;
    var props = Model.DynamicProperties;
    //Locations
    Dictionary<string, string> locations = ViewBag.Locations;

    //Date A_04
    var date_A_04 = DataHelpers.DateToString(props["a_04"]);

    //Dic I_08
    var dic_I_8 = new List<AqFieldSelectViewModel>()
{
        new(){Key = "Propietario/a", Label= "Propietario (a)", Columns= 6},
        new(){Key = "Copropietario/a o Socio/a", Label= "Copropietario o Socio (a)", Columns= 9},
        new(){Key = "Representante Legal", Label= "Representante legal", Columns= 8},
        new(){Key = "Administrador/a", Label= "Administrador (a)", Columns= 6},
        new(){Key = "Jefe de producción", Label= "Jefe de producción", Columns= 7},
        new(){Key = "Técnico de Producción", Label= "Técnico de producción", Columns= 8},
        new(){Key = "Operario de Producción", Label= "Operario de producción", Columns= 8},
        new(){Key = "Trabajador Familiar", Label= "Trabajador familiar", Columns= 10},
    };
    //Geolocation
    var geo = props["ii_geo_p"] != null ? ((String)props["ii_geo_p"]).Split(' ') : null;
    var location = DataHelpers.DecimalToDMS(geo != null ? geo[0] : null, geo != null ? geo[1] : null);

}
<div>
    <input type="button" onclick="tableToExcel('table-export', 'Caracterización', 'estilo')" value="Exportar">
</div>
<div id="table-export">
    <style>
        table {
            font-size: 8pt;
            font-family: Garamond;
            border-collapse: collapse;
            background-color: white;
        }

        td {
            vertical-align: middle;
            min-height: 16px;
            text-align: center;
            border: 0.5pt solid black;
        }

        .b-0 {
            border: none;
        }

        .separator {
            height: 8px;
        }

        .section {
            font-weight: 700;
            background-color: #8EA9DB;
        }

        .header {
            height: 14px;
            font-size: 11pt;
        }

        .label_l {
            font-weight: 700;
            background-color: #D9E1F2;
            text-align: left;
            overflow: hidden;
            height: 16px;
        }

        .label {
            font-weight: 700;
            background-color: #D9E1F2;
            overflow: hidden;
            height: 16px;
        }

        .bold {
            font-weight: 700;
        }

        .titled {
            color: #A6A6A6;
            font-weight: 700;
        }
    </style>
    <table>
        <colgroup>
            @for (var i = 0; i < 80; i++)
            {
                <col width="16" />
            }
        </colgroup>
        <tr></tr>
        <tr class="header">
            <td class="b-0"></td>
            <td colspan="11" rowspan="6">
                <img width="170" src="https://acuicultura.odscolombia.org/images/aunap2.png" />
            </td>
            <td colspan="57" rowspan="3">GESTIÓN DE INSPECCIÓN Y VIGILANCIA</td>
            <td colspan="11" rowspan="2">Código: FT-IV-046</td>
        </tr>
        <tr class="header">
            <td class="b-0"></td>
        </tr>
        <tr class="header">
            <td class="b-0"></td>
            <td colspan="11" rowspan="2">Versión: 1</td>
        </tr>
        <tr class="header">
            <td class="b-0"></td>
            <td colspan="57" rowspan="3">FORMULARIO DE CARACTERIZACIÓN DE UNIDADES DE PRODUCCIÓN DE ACUICULTURA- SEPEC</td>
        </tr>
        <tr class="header">
            <td class="b-0"></td>
            <td colspan="11" rowspan="2">Vigencia desde: 02/07/2021</td>
        </tr>
        <tr class="header">
            <td class="b-0"></td>
        </tr>

        <tr class="separator"></tr>
        <tr>
            <td class="b-0"></td>
            <td colspan="8" class="label_l">@fields["a_01"].Name:</td>
            @await Component.InvokeAsync("AqFieldText", new { columns = 6, value = props["a_01"], number = true })
            <td colspan="5" class="label">@fields["a_02"].Name:</td>
            @await Component.InvokeAsync("AqFieldText", new { columns = 6, value = props["a_02"], number = true })
            <td colspan="11" class="label">@fields["a_03"].Name:</td>
            @await Component.InvokeAsync("AqFieldText", new { columns = 25, value = props["a_03"] })
            <td colspan="8" class="label">@fields["a_04"].Name:</td>
            @await Component.InvokeAsync("AqFieldText", new { columns = 3, value = date_A_04[0], title = "DD" })
            @await Component.InvokeAsync("AqFieldText", new { columns = 3, value = date_A_04[1], title = "MM" })
            @await Component.InvokeAsync("AqFieldText", new { columns = 4, value = date_A_04[2], title = "YYYY" })
        </tr>

        <tr class="separator"></tr>
        <tr>
            <td class="b-0"></td>
            <td colspan="79" class="section">@fields["i"].Name</td>
        </tr>
        <tr>
            <td class="b-0"></td>
            <td colspan="11" class="label">@fields["i_05"].Name:</td>
            @await Component.InvokeAsync("AqFieldText", new { columns = 20, value = props["i_05"] })
            <td colspan="9" class="label">@fields["i_06"].Name:</td>
            @await Component.InvokeAsync("AqFieldText", new { columns = 10, value = props["i_06"] })
            <td colspan="10" class="label">@fields["i_07"].Name:</td>
            @await Component.InvokeAsync("AqFieldText", new { columns = 19, value = props["i_07"] })
        </tr>
        <tr class="last-line">
            <td class="b-0"></td>
            <td colspan="9" class="label">@fields["i_08"].Name:</td>
            @await Component.InvokeAsync("AqFieldSelect", new { options = dic_I_8, value = props["i_08"] })
        </tr>

        <tr class="separator"></tr>
        <tr>
            <td class="b-0"></td>
            <td colspan="79" class="section">@fields["ii"].Name</td>
        </tr>
        <tr>
            <td class="b-0"></td>
            <td colspan="7" class="label">@fields["ii_09"].Name:</td>
            @await Component.InvokeAsync("AqFieldText", new { columns = 13, value = props["ii_09"], locations, extra = "_2" })
            <td colspan="6" class="label">@fields["ii_10"].Name:</td>
            @await Component.InvokeAsync("AqFieldText", new { columns = 13, value = props["ii_10"], locations, extra = "_3" })
            <td colspan="8" class="label">@fields["ii_11"].Name:</td>
            @if (props["ii_11_a"] != null)
            {
                @await Component.InvokeAsync("AqFieldText", new { columns = 14, value = props["ii_11_a"] })
            }
            else
            {
                @await Component.InvokeAsync("AqFieldText", new { columns = 14, value = props["ii_11"], locations, extra = "_4" })
            }
            <td colspan="5" class="label">@fields["ii_12"].Name:</td>
            @if (props["ii_12_a"] != null)
            {
                @await Component.InvokeAsync("AqFieldText", new { columns = 13, value = props["ii_12_a"] })
            }
            else
            {
                @await Component.InvokeAsync("AqFieldText", new { columns = 13, value = props["ii_12"], locations, extra = "_5" })
            }
        </tr>
        <tr>
            <td class="b-0"></td>
            <td colspan="9" class="label">@fields["ii_13"].Name:</td>
            @await Component.InvokeAsync("AqFieldText", new { columns = 20, value = props["ii_13"] })
            <td colspan="6" class="label">@fields["ii_14"].Name:</td>
            @await Component.InvokeAsync("AqFieldText", new { columns = 3, value = location[0], title = "GG" })
            @await Component.InvokeAsync("AqFieldText", new { columns = 3, value = location[1], title = "MM" })
            @await Component.InvokeAsync("AqFieldText", new { columns = 4, value = location[2], title = "SS.SS" })
            <td class="@(location[3] == "N" ? "bold" : "titled")">N</td>
            <td class="@(location[3] == "S" ? "bold" : "titled")">S</td>
            <td colspan="6" class="label">@fields["ii_15"].Name:</td>
            @await Component.InvokeAsync("AqFieldText", new { columns = 3, value = location[4], title = "GG" })
            @await Component.InvokeAsync("AqFieldText", new { columns = 3, value = location[5], title = "MM" })
            @await Component.InvokeAsync("AqFieldText", new { columns = 4, value = location[6], title = "SS.SS" })
            <td class="@(location[7] == "W" ? "bold" : "titled")">W</td>
            <td class="@(location[7] == "E" ? "bold" : "titled")">E</td>
            <td colspan="5" class="label">@fields["ii_16"].Name:</td>
            @await Component.InvokeAsync("AqFieldText", new { columns = 5, value = geo != null ? geo[2] : "" })
            <td colspan="4">m s. n. m.</td>
        </tr>
        @for (var i = 0; i < 20; i++)
        {
            <tr></tr>
        }
    </table>
</div>
@section Styles{
    <link rel="stylesheet" href="~/css/acuicultura/index.css">
}
@section Scripts {
    <script type="text/javascript">
        var tableToExcel = (function () {
            var uri = 'data:application/vnd.ms-excel;base64,'
                , template = '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40">'
                    + '<meta http-equiv="content-type" content="application/vnd.ms-excel; charset=UTF-8">'
                    + '<head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--></head>'
                    + '<body>{table}</body></html>'
                , base64 = function (s) { return window.btoa(unescape(encodeURIComponent(s))) }
                , format = function (s, c) { return s.replace(/{(\w+)}/g, function (m, p) { return c[p]; }) }

            return function (table, name, styleId) {
                if (!table.nodeType) table = document.getElementById(table)
                var styleHead = document.getElementById(styleId);
                var ctx = { worksheet: name || 'Worksheet', table: table.innerHTML }
                //window.location.href = uri + base64(format(template, ctx))
                let a = document.createElement('a');
                a.href = uri + base64(format(template, ctx));
                a.download = 'Acuicultura_' + '.xls';
                a.click();
            }
        })();
    </script>
}

